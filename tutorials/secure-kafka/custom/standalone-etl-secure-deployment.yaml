apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: standalone-etl-secure
spec:
  image: quay.io/streamshub/flink-sql-runner:main
  flinkVersion: v2_0
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "1"
  serviceAccount: flink
  podTemplate:
    kind: Pod
    spec:
      volumes:
        - name: my-cluster-cluster-ca-cert
          secret:
            secretName: my-cluster-cluster-ca-cert
            items:
              - key: ca.crt
                path: ca.crt
        - name: my-user-custom-cert
          secret:
            secretName: my-user-custom-cert
      containers:
        - name: flink-main-container
          volumeMounts:
            - name: my-cluster-cluster-ca-cert
              mountPath: "/opt/my-cluster-cluster-ca-cert"
              readOnly: true
            - name: my-user-custom-cert
              mountPath: "/opt/my-user-custom-cert"
              readOnly: true
          env:
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: my-user-custom-cert-password
                    key: password
            - name: SQL_STATEMENTS
              value: |
                  CREATE TABLE SalesRecordTable (
                      invoice_id STRING,
                      user_id STRING,
                      product_id STRING,
                      quantity STRING,
                      unit_cost STRING,
                      `purchase_time` TIMESTAMP(3) METADATA FROM 'timestamp',
                      WATERMARK FOR purchase_time AS purchase_time - INTERVAL '1' SECOND
                  ) WITH (
                      'connector' = 'kafka',
                      'topic' = 'flink.sales.records',
                      'properties.bootstrap.servers' = 'my-cluster-kafka-bootstrap.flink.svc:9094',
                      'properties.security.protocol' = 'SSL',
                      'properties.ssl.truststore.location' = '/opt/my-cluster-cluster-ca-cert/ca.crt',
                      'properties.ssl.truststore.type' = 'PEM',
                      'properties.ssl.keystore.location' = '/opt/my-user-custom-cert/keystore.p12',
                      'properties.ssl.keystore.password' = '$(KEYSTORE_PASSWORD)',
                      'properties.group.id' = 'sales-record-group',
                      'value.format' = 'avro-confluent',
                      'value.avro-confluent.url' = 'http://apicurio-registry-service.flink.svc:8080/apis/ccompat/v6',
                      'scan.startup.mode' = 'latest-offset'
                  );

                  CREATE TABLE CustomAuthSalesRecordTable (
                    invoice_id STRING, 
                    user_id STRING, 
                    product_id STRING, 
                    quantity STRING, 
                    PRIMARY KEY (`user_id`) NOT ENFORCED
                  ) WITH (
                    'connector' = 'upsert-kafka', 
                    'topic' = 'flink.custom.auth.sales.records', 
                    'properties.bootstrap.servers' = 'my-cluster-kafka-bootstrap.flink.svc:9094', 
                    'properties.security.protocol' = 'SSL',
                    'properties.ssl.truststore.location' = '/opt/my-cluster-cluster-ca-cert/ca.crt',
                    'properties.ssl.truststore.type' = 'PEM',
                    'properties.ssl.keystore.location' = '/opt/my-user-custom-cert/keystore.p12',
                    'properties.ssl.keystore.password' = '$(KEYSTORE_PASSWORD)',
                    'properties.client.id' = 'sql-secure-client', 
                    'properties.transaction.timeout.ms' = '800000', 
                    'key.format' = 'csv', 
                    'value.format' = 'csv', 
                    'value.fields-include' = 'ALL'
                  );

                  INSERT INTO CustomAuthSalesRecordTable 
                    SELECT 
                      invoice_id, 
                      user_id, 
                      product_id, 
                      quantity
                    FROM SalesRecordTable
                    LIMIT 10;
  jobManager:
    resource:
      memory: "2048m"
      cpu: 1
  taskManager:
    resource:
      memory: "2048m"
      cpu: 1
  job:
    jarURI: local:///opt/streamshub/flink-sql-runner.jar
    parallelism: 1
    upgradeMode: stateless
